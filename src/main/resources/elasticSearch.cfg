http.cors.enabled : true
http.cors.allow-origin: "*"
http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length
http.cors.allow-credentials: true



How to start the app (VM Arguments)
-Dspring.profiles.active=local -Dlogging.path=/Users/kunaldipti/logs

cf login -a api.run.pivotal.io -u kunal.pimparkhede@gmail.com -p Hippo@123 -o ScholarBasket -s development

docker exec -it 28c  bash

docker stop 28c


gcloud config list

gcloud config set project .....

add google cloud plugin and dependency in POM.xml


main/appengine/app.yml must be created

Project ID
moonlit-academy-276018

GCLOUD documentation
https://cloud.google.com/sdk/gcloud.


gcloud config list project
[core]
project = moonlit-academy-276018


How to deploy Sprring Boot application on Google cloud
https://codelabs.developers.google.com/codelabs/cloud-app-engine-springboot/index.html?index=..%2F..index#5

Install GCLOUD on MAC

brew cask install google-cloud-sdk


gcloud config set project moonlit-academy-276018

gcloud app create --region us-central


mvn appengine:deploy

https://moonlit-academy-276018.uc.r.appspot.com


After the application is deployed, you can visit it by opening the URL http://<project-id>.appspot.com in your web browser. Or, type:

$ gcloud app browse
... [It may print out the URL for your app]


https://medium.com/@rohitgoyal/use-of-bitbucket-pipelines-to-deploy-spring-boot-application-in-google-app-engine-578da6fa9a42

gcloud init # if this is your first Google Cloud SDK run.
gcloud beta runtime-config configs create myapp_uat
gcloud beta runtime-config configs variables set myapp.queue-size 25 --config-name myapp_uat

 mvn package appengine:deploy -Dapp.deploy.projectId=moonlit-academy-276018


    </springProfile>
          <springProfile name="uat">
          <appender name="CLOUD" class="com.google.cloud.logging.logback.LoggingAppender">
              <!-- Optional : filter logs at or above a level -->
         <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>INFO</level>
         </filter>
         <log>application.log</log> <!-- Optional : default java.log -->
         <resourceType>gae_app</resourceType> <!-- Optional : default: auto-detected, fallback: global -->
         <enhancer>com.example.logging.logback.enhancers.ExampleEnhancer</enhancer> <!-- Optional -->
         <flushLevel>WARN</flushLevel> <!-- Optional : default ERROR -->
     </appender>





         <root level="info">
         <appender-ref ref="CLOUD" />
     </root>
     </springProfile>

      <springProfile name="local">
         <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
             <encoder>
                 <pattern>%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n</pattern>
             </encoder>
         </appender>

         <appender name="SAVE-TO-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
             <file>${logging.path}/serverlog.log</file>
             <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                 <Pattern>%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n</Pattern>
             </encoder>
             <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                 <fileNamePattern>${logging.path}/archived/serverlog_%d{dd-MM-yyyy}.log</fileNamePattern>
                 <maxHistory>10</maxHistory>
                 <totalSizeCap>100MB</totalSizeCap>
             </rollingPolicy>
         </appender>




         <root level="info">
             <appender-ref ref="STDOUT" />
             <appender-ref ref="SAVE-TO-FILE" />
         </root>
         </springProfile>


         <appender name="CLOUD" class="com.google.cloud.logging.logback.LoggingAppender">
                     <!-- Optional : filter logs at or above a level
                     <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                         <level>INFO</level>
                     </filter> -->
                     <log>application.log</log> <!-- Optional : default java.log -->
                     <!--     <resourceType>gae_app</resourceType>  Optional : default: auto-detected, fallback: global -->
                     <enhancer>com.example.logging.logback.enhancers.ExampleEnhancer</enhancer> <!-- Optional -->
                     <flushLevel>WARN</flushLevel> <!-- Optional : default ERROR -->
                 </appender>





                 <root level="info">
                     <appender-ref ref="CLOUD" />
                 </root>